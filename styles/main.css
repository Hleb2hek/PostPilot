@charset "UTF-8";
/**
Нормализация блочной модели
*/
*,
::before,
::after {
  box-sizing: border-box;
}

/**
Убираем внутренние отступы слева тегам списков,
у которых есть атрибут class
*/
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
Убираем внешние отступы body и двум другим тегам,
у которых есть атрибут class
*/
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
	Убираем внешние отступы вертикали нужным тегам,
	у которых есть атрибут class
*/
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
	Убираем стандартный маркер маркированному списку,
	у которого есть атрибут class
*/
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
	Обнуляем вертикальные внешние отступы параграфа,
	объявляем локальную переменную для внешнего отступа вниз,
	чтобы избежать взаимодействие с более сложным селектором
*/
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
	Внешний отступ вниз для параграфа без атрибута class,
	который расположен не последним среди своих соседних элементов
*/
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
	Упрощаем работу с изображениями и видео
*/
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
	Наследуем свойства шрифт для полей ввода
*/
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
  Пригодится в большинстве ситуаций
  (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  height: 100%;
  /**
  Убираем скачок интерфейса по горизонтали
  при появлении / исчезновении скроллбара
  */
  scrollbar-gutter: stable;
}

/**
	Плавный скролл
*/
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
  Пригодится в большинстве ситуаций
  (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  min-height: 100%;
  /**
  Унифицированный интерлиньяж
  */
  line-height: 1.5;
}

/**
	Нормализация высоты элемента ссылки при его инспектировании в DevTools
*/
a:where([class]) {
  display: inline-flex;
}

/**
	Курсор-рука при наведении на элемент
*/
button,
label {
  cursor: pointer;
}

/**
	Приводим к единому цвету svg-элементы
	(за исключением тех, у которых уже указан
	атрибут fill со значением 'none' или начинается с 'url')
*/
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
	Приводим к единому цвету svg-элементы
	(за исключением тех, у которых уже указан
	атрибут stroke со значением 'none')
*/
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
	Чиним баг задержки смены цвета при взаимодействии с svg-элементами
*/
svg * {
  transition-property: fill, stroke;
}

/**
	Приведение рамок таблиц в классический 'collapse' вид
*/
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
	Удаляем все анимации и переходы для людей,
	которые предпочитают их не использовать
*/
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Covered By Your Grace";
  src: url("/fonts/coveredbyyourgrace.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("/fonts/roboto-regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("/fonts/inter-medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("/fonts/inter-medium-italic.woff2") format("woff2");
  font-weight: 500;
  font-style: italic;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("/fonts/inter-bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/* Миксин, который расчитывает динамически размер шрифта,
средний параметр(рекомендуемое значение) расчитывается исходя из
первого параметра делённого на максимальную
ширину лендинга помноженного на 100% высоту экрана
*/
/* Миксин для тегов наследования цвета от родителя
и сброс нижнего подчёркивания ссылок
*/
/* Миксин для сброса дефолтных
свойств у кнопок
*/
/* Миксин для задания блоку или строчному объекту 
нужный дисплей + центрирование 
*/
/* Миксин для центрирования
у псевдоэлементов
*/
/* Миксин, который настраивает изображение 
в равные пропорции
*/
/*
above - mobile-first, т.е при уменьшении масштаба будут применяться
иные стили, т.к. начальный масштаб был с телефона
без above - обычные переменные для медиа запроса
*/
:root {
  --color-white: #ffffff;
  --color-dark: #080b1d;
  --color-gray-50: #f1f1f1;
  --color-gray-300: #58595d;
  --color-gray-500: #2e2f35;
  --color-gray-600: #222222;
  --color-cyan-100: #d9f2f7;
  --color-cyan-400: #02a99b;
  --color-cyan-500: #009387;
  --color-lime: #e0f8f2;
  --color-blue: #eeecff;
  --color-red: #faeded;
  --color-orange-100: #fdf3ea;
  --color-orange-300: #fdc639;
  --color-orange-500: #ff6d2c;
  --color-orange-800: #a89b90;
  --border: 2px solid var(--color-gray-500);
  --border-radius: 13px;
  --border-radius-small: 12px;
  --border-radius-large: 15px;
  --border-shadow: 3px 3px 0px 0px var(--color-gray-500);
  --font-famaly-base: "Inter", sans-serif;
  --font-famaly-accent: "Covered By Your Grace", sans-serif;
  --container-width: 1290px;
  --container-padding-x: 20px;
  --btn-height: 44px;
  --transition-duration: .2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 867px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 868px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(14px, 1.1111111111vw, 16);
  font-family: var(--font-famaly-base);
  font-weight: 500;
  line-height: 1.87;
  color: var(--color-gray-300);
  background-color: var(--color-lime);
}

a, button, input, textarea, svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-weight: 700;
}

h1 {
  font-size: clamp(63px, 5.6944444444vw, 82);
}

h2 {
  font-size: clamp(46px, 4.1666666667vw, 60);
}

h3 {
  font-size: clamp(24px, 1.9444444444vw, 28);
}

.btn {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 14px 22px 12px 22px;
  height: var(--btn-height);
  border: var(--border);
  box-shadow: var(--border-shadow);
  border-radius: var(--border-radius-small);
  font-family: var(--font-famaly-base);
  font-size: 15px;
  line-height: 1.2;
  font-weight: 500;
  color: var(--color-white);
  background-color: var(--color-orange-500);
}
@media (hover: hover) {
  .btn:hover {
    color: var(--color-gray-500);
    background-color: var(--color-white);
  }
}
@media (hover: none) {
  .btn:active {
    color: var(--color-gray-500);
    background-color: var(--color-white);
  }
}
@media (hover: hover) {
  .btn:active {
    box-shadow: none;
  }
}
.btn.transparent {
  color: var(--color-gray-500);
  background-color: var(--color-white);
}
@media (hover: hover) {
  .btn.transparent:hover {
    color: var(--color-gray-500);
    background-color: var(--color-white);
  }
}
@media (hover: none) {
  .btn.transparent:active {
    color: var(--color-gray-500);
    background-color: var(--color-white);
  }
}

.burger-btn {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48px;
  aspect-ratio: 1;
  position: relative;
  border-radius: var(--border-radius-small);
}
@media (hover: hover) {
  .burger-btn:hover {
    background-color: var(--color-cyan-500);
  }
}
@media (hover: none) {
  .burger-btn:active {
    background-color: var(--color-cyan-500);
  }
}
.burger-btn::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 2px;
  background-color: var(--color-gray-500);
  border-radius: 5px;
  box-shadow: 0 8px var(--color-gray-500), 0 -8px var(--color-gray-500);
}

.header {
  height: 65px;
  background-color: var(--color-white);
  border-top: 8px solid var(--color-lime);
}
.header__container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 24px;
}
@media (max-width: 867px) {
  .header__container {
    padding-top: 17px;
  }
}
@media (max-width: 867px) {
  .header__logo {
    padding-top: 7px;
  }
}
.header__menu-list {
  display: flex;
  column-gap: 38px;
}
.header__menu-link {
  position: relative;
  color: var(--color-gray-500);
  font-size: 14px;
  line-height: 1.3;
}
@media (max-width: 1023px) {
  .header__menu-link {
    font-size: 12px;
  }
}
@media (hover: hover) {
  .header__menu-link:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .header__menu-link:active::after {
    width: 100%;
  }
}
.header__menu-link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: currentColor;
  transition-duration: inherit;
}
.header__menu-sublist {
  display: none;
}
.header__btns {
  display: flex;
  column-gap: 16px;
}
@media (max-width: 1023px) {
  .header__btn {
    font-size: 13px;
  }
}

.mobile-overlay {
  width: 100%;
  height: 100%;
  margin: 0;
  border: none;
}
.mobile-overlay:modal {
  max-width: 100%;
  max-height: 100%;
}
.mobile-overlay__menu-sublist {
  display: none;
}

/*# sourceMappingURL=main.css.map */
